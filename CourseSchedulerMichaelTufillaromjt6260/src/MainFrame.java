
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Base64;
import javax.swing.JOptionPane;
import java.util.Calendar;
import javax.swing.table.DefaultTableModel;

/*
    Michael Tufillaro
    Compsci 221
    12/05/2023
    Purpose: Creates a course selection program using GUIs and databases.
*/
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    private String currentSemester;
    private String author;
    private String project;

    public MainFrame() {
        initComponents();
        checkData();
        //rebuilds comboboxes as soon as the program starts
        rebuildSemesterComboBoxes();
        rebuildCourseComboBoxes();
        rebuildStudentComboBoxes();
    }

    public void rebuildSemesterComboBoxes() {
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray()));
        if (semesters.size() > 0) {
            currentSemesterLabel.setText(semesters.get(0));
            currentSemester = semesters.get(0);
        } else {
            currentSemesterLabel.setText("None, add a semester.");
            currentSemester = "None";
        }
    }
    //method that allows the current semester to be changed
    public void changeSemesters()
    {
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        if (semesters.size() > 1)
        {
            //takes the currently selected semester in the combo box and makes it the current semester
            currentSemesterLabel.setText(currentSemesterComboBox.getSelectedItem().toString());
            currentSemester = currentSemesterComboBox.getSelectedItem().toString();
            rebuildCourseComboBoxes();
        }
        
    }
    public void rebuildCourseComboBoxes() 
    {
        //rebuilds the combo boxes with new values
        ArrayList<String> courseCodes = CourseQueries.getAllCourseCodes();
        ArrayList<String> currentSemesterCodes = ClassQueries.getAllCourseCodes(currentSemester);
        
        addClassCodeComboBox.setModel(new javax.swing.DefaultComboBoxModel(courseCodes.toArray()));
        scheduleClassesClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(currentSemesterCodes.toArray()));
        displayClassListComboBox.setModel(new javax.swing.DefaultComboBoxModel(currentSemesterCodes.toArray()));
        dropClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(currentSemesterCodes.toArray()));
        studentDropClassesClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(currentSemesterCodes.toArray()));
    }
    
    public void rebuildStudentComboBoxes()
    {
        //rebuilds the combo boxes with new values as they are added
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        String[] names = new String[students.size()];
        //creates an array of the names of all the students
        for (int index = 0; index < students.size(); index++)
        {
            //calls the overwritten toString method in the StudentEntry class
            names[index] = students.get(index).toString();
        }
        
        scheduleClassesStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(names));
        displaySchedulesComboBox.setModel(new javax.swing.DefaultComboBoxModel(names));
        dropStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(names));
        studentDropClassesStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(names));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        addSemesterTextfield = new javax.swing.JTextField();
        addSemesterSubmitButton = new javax.swing.JButton();
        addSemesterStatusLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        addCourseCodeTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        addCourseDescriptionTextField = new javax.swing.JTextField();
        addCourseSubmitButton = new javax.swing.JButton();
        addCourseStatusLabel = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        addClassSubmitButton = new javax.swing.JButton();
        addClassStatusLabel = new javax.swing.JLabel();
        addClassCodeComboBox = new javax.swing.JComboBox<>();
        addClassSeatSpinner = new javax.swing.JSpinner();
        jPanel7 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        addStudentIDTextField = new javax.swing.JTextField();
        addStudentFirstNameTextField = new javax.swing.JTextField();
        addStudentLastNameTextField = new javax.swing.JTextField();
        addStudentSubmitButton = new javax.swing.JButton();
        addStudentStatusLabel = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        displayClassListComboBox = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        displayClassListButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        displayClassListScheduledTable = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        displayClassListWaitlistedTable = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        dropClassTextArea = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        dropClassComboBox = new javax.swing.JComboBox<>();
        dropClassSubmitButton = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        dropStudentComboBox = new javax.swing.JComboBox<>();
        dropStudentSubmitButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        dropStudentTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayClassesTable = new javax.swing.JTable();
        displayClassesButton = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        scheduleClassesClassComboBox = new javax.swing.JComboBox<>();
        scheduleClassesStudentComboBox = new javax.swing.JComboBox<>();
        scheduleClassesSubmitButton = new javax.swing.JButton();
        scheduleClassesStatusLabel = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        displaySchedulesComboBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        displaySchedulesTable = new javax.swing.JTable();
        displaySchedulesButton = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        studentDropClassesClassComboBox = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        studentDropClassesSubmitButton = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        studentDropClassesTextArea = new javax.swing.JTextArea();
        jLabel20 = new javax.swing.JLabel();
        studentDropClassesStudentComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        currentSemesterLabel = new javax.swing.JLabel();
        currentSemesterComboBox = new javax.swing.JComboBox<>();
        changeSemesterButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();
        clearDatabaseButton = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Course Scheduler");

        jLabel3.setText("Semester Name:");

        addSemesterTextfield.setColumns(20);

        addSemesterSubmitButton.setText("Submit");
        addSemesterSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSemesterSubmitButtonActionPerformed(evt);
            }
        });

        addSemesterStatusLabel.setText("                                                   ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(addSemesterSubmitButton)))
                .addContainerGap(316, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addSemesterSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addSemesterStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Semester", jPanel3);

        jLabel4.setText("Course Code: ");

        addCourseCodeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseCodeTextFieldActionPerformed(evt);
            }
        });

        jLabel5.setText("Course Description:");

        addCourseDescriptionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseDescriptionTextFieldActionPerformed(evt);
            }
        });

        addCourseSubmitButton.setText("Submit");
        addCourseSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseSubmitButtonActionPerformed(evt);
            }
        });

        addCourseStatusLabel.setText("  ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(addCourseSubmitButton))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCourseStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(addCourseDescriptionTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                    .addComponent(addCourseCodeTextField))))))
                .addContainerGap(366, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(addCourseCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(addCourseDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addCourseSubmitButton)
                .addGap(27, 27, 27)
                .addComponent(addCourseStatusLabel)
                .addGap(0, 177, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Course", jPanel4);

        jLabel7.setText("Course Code:");

        jLabel8.setText("Seats:");

        addClassSubmitButton.setText("Submit");
        addClassSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClassSubmitButtonActionPerformed(evt);
            }
        });

        addClassStatusLabel.setText("    ");

        addClassCodeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        addClassCodeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClassCodeComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(addClassCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(addClassSeatSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addGap(109, 109, 109)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(addClassSubmitButton))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addClassStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(401, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addClassCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(addClassSeatSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addClassSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addClassStatusLabel)
                .addContainerGap(186, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Class", jPanel6);

        jLabel10.setText("Student ID: ");

        jLabel11.setText("First Name: ");

        jLabel12.setText("Last Name: ");

        addStudentIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentIDTextFieldActionPerformed(evt);
            }
        });

        addStudentFirstNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentFirstNameTextFieldActionPerformed(evt);
            }
        });

        addStudentLastNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentLastNameTextFieldActionPerformed(evt);
            }
        });

        addStudentSubmitButton.setText("Submit");
        addStudentSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentSubmitButtonActionPerformed(evt);
            }
        });

        addStudentStatusLabel.setText("   ");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(29, 29, 29)
                                .addComponent(addStudentIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addStudentFirstNameTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addStudentLastNameTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(addStudentSubmitButton))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addStudentStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(413, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(addStudentIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(addStudentFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(addStudentLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addStudentSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addStudentStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Student", jPanel7);

        displayClassListComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel14.setText("Choose Class: ");

        displayClassListButton.setText("Display");
        displayClassListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayClassListButtonActionPerformed(evt);
            }
        });

        jLabel15.setText("Scheduled Students in the Class:");

        displayClassListScheduledTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "StudentID"
            }
        ));
        jScrollPane4.setViewportView(displayClassListScheduledTable);

        jLabel16.setText("Waitlisted Students in the Class in Waitlist Order:");

        displayClassListWaitlistedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "StudentID"
            }
        ));
        jScrollPane5.setViewportView(displayClassListWaitlistedTable);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(129, 129, 129))
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(displayClassListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(104, 104, 104)
                                .addComponent(displayClassListButton))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(237, Short.MAX_VALUE))))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayClassListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(displayClassListButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Display Class List", jPanel10);

        dropClassTextArea.setEditable(false);
        dropClassTextArea.setColumns(20);
        dropClassTextArea.setRows(5);
        jScrollPane8.setViewportView(dropClassTextArea);

        jLabel18.setText("Select Class:");

        dropClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        dropClassComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropClassComboBoxActionPerformed(evt);
            }
        });

        dropClassSubmitButton.setText("Submit");
        dropClassSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropClassSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane8)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addComponent(dropClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(116, 116, 116)
                        .addComponent(dropClassSubmitButton)))
                .addContainerGap(237, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(dropClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropClassSubmitButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Drop Class", jPanel11);

        jLabel17.setText("Select Student: ");

        dropStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        dropStudentComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropStudentComboBoxActionPerformed(evt);
            }
        });

        dropStudentSubmitButton.setText("Submit");
        dropStudentSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropStudentSubmitButtonActionPerformed(evt);
            }
        });

        dropStudentTextArea.setEditable(false);
        dropStudentTextArea.setColumns(20);
        dropStudentTextArea.setRows(5);
        jScrollPane7.setViewportView(dropStudentTextArea);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(18, 18, 18)
                        .addComponent(dropStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dropStudentSubmitButton)))
                .addContainerGap(237, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(dropStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropStudentSubmitButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Drop Student", jPanel12);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        jTabbedPane1.addTab("Admin", jPanel1);

        displayClassesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course Code", "Description", "Seats"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(displayClassesTable);

        displayClassesButton.setText("Display");
        displayClassesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayClassesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(displayClassesButton)
                .addContainerGap(437, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayClassesButton)
                .addGap(0, 72, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Display Classes", jPanel5);

        jLabel6.setText("Select Class: ");

        jLabel9.setText("Select Student: ");

        scheduleClassesClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        scheduleClassesStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        scheduleClassesSubmitButton.setText("Submit");
        scheduleClassesSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheduleClassesSubmitButtonActionPerformed(evt);
            }
        });

        scheduleClassesStatusLabel.setText("    ");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(scheduleClassesSubmitButton))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scheduleClassesStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel9))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(scheduleClassesStudentComboBox, 0, 170, Short.MAX_VALUE)
                                    .addComponent(scheduleClassesClassComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(313, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(scheduleClassesClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(scheduleClassesStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(scheduleClassesSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(scheduleClassesStatusLabel)
                .addContainerGap(180, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Schedule Classes", jPanel8);

        jLabel13.setText("Select Student: ");

        displaySchedulesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        displaySchedulesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Course Code", "Status"
            }
        ));
        jScrollPane2.setViewportView(displaySchedulesTable);

        displaySchedulesButton.setText("Display");
        displaySchedulesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displaySchedulesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(displaySchedulesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(displaySchedulesButton)))
                .addContainerGap(249, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(displaySchedulesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displaySchedulesButton)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Display Schedules", jPanel9);

        studentDropClassesClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        studentDropClassesClassComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDropClassesClassComboBoxActionPerformed(evt);
            }
        });

        jLabel19.setText("Select Class:");

        studentDropClassesSubmitButton.setText("Submit");
        studentDropClassesSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDropClassesSubmitButtonActionPerformed(evt);
            }
        });

        studentDropClassesTextArea.setEditable(false);
        studentDropClassesTextArea.setColumns(20);
        studentDropClassesTextArea.setRows(5);
        jScrollPane9.setViewportView(studentDropClassesTextArea);

        jLabel20.setText("Select Student: ");

        studentDropClassesStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        studentDropClassesStudentComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDropClassesStudentComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel19))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(studentDropClassesStudentComboBox, 0, 170, Short.MAX_VALUE)
                            .addComponent(studentDropClassesClassComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(89, 89, 89)
                        .addComponent(studentDropClassesSubmitButton)))
                .addContainerGap(243, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(studentDropClassesStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(studentDropClassesClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(studentDropClassesSubmitButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Drop Classes", jPanel13);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );

        jTabbedPane1.addTab("Student", jPanel2);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel2.setText("Current Semester: ");

        currentSemesterLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        currentSemesterLabel.setText("           ");

        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        changeSemesterButton.setText("Change Semester");
        changeSemesterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSemesterButtonActionPerformed(evt);
            }
        });

        aboutButton.setText("About");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });

        clearDatabaseButton.setText("Clear Database");
        clearDatabaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearDatabaseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentSemesterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(83, 83, 83)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(clearDatabaseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(changeSemesterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aboutButton)
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(currentSemesterLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clearDatabaseButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jTabbedPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(changeSemesterButton)
                            .addComponent(aboutButton))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
        // TODO add your handling code here:
        // display about information.
        JOptionPane.showMessageDialog(null, "Author: " + author + " Project: " + project);
    }//GEN-LAST:event_aboutButtonActionPerformed

    private void scheduleClassesSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheduleClassesSubmitButtonActionPerformed
        String status = "scheduled";
        String semester = currentSemester;
        String courseCode = scheduleClassesClassComboBox.getSelectedItem().toString();
        //reads the combobox and gets the students name and ID in an array
        String[] studentName = scheduleClassesStudentComboBox.getSelectedItem().toString().split(" ");
        String studentID = studentName[2];
        //checks to see how many seats are taken to determine if the student should be waitlisted or not
        
        int totalSeats = ClassQueries.getClassSeats(semester, courseCode);
        int takenSeats = ScheduleQueries.getScheduledStudentCount(semester, courseCode);
        
        if (takenSeats >= totalSeats)
        {
            status = "waitlisted";
        } 
        
        //declare timestamp field for the time of scheduling
        java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
        ScheduleEntry entry = new ScheduleEntry(semester, courseCode, studentID, status, currentTimestamp);
        //adds new entry to database and updates label
        ScheduleQueries.addScheduleEntry(entry);
        scheduleClassesStatusLabel.setText(scheduleClassesStudentComboBox.getSelectedItem().toString() + " has been " + status + " for " + courseCode);
    }//GEN-LAST:event_scheduleClassesSubmitButtonActionPerformed

    private void displayClassesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayClassesButtonActionPerformed
        ArrayList<ClassDescription> classes = MultiTableQueries.getAllClassDescription(currentSemester);
        //sets table model for the display classes table
        DefaultTableModel displayClassesTableModel = (DefaultTableModel) displayClassesTable.getModel();
        displayClassesTableModel.setNumRows(0);
        //pulls data from classesArrayList and puts it into table
        Object[] rowData = new Object[3];
        for (ClassDescription c: classes)
        {
            rowData[0] = c.getCourseCode();
            rowData[1] = c.getDescription();
            rowData[2] = c.getSeats();
            displayClassesTableModel.addRow(rowData);
        }
        
    }//GEN-LAST:event_displayClassesButtonActionPerformed

    private void changeSemesterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSemesterButtonActionPerformed
        // TODO add your handling code here:
        changeSemesters();
    }//GEN-LAST:event_changeSemesterButtonActionPerformed

    private void displaySchedulesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displaySchedulesButtonActionPerformed
        //reads the combobox and gets the students name and ID in an array
        String[] studentName = displaySchedulesComboBox.getSelectedItem().toString().split(" ");
        String studentID = studentName[2];
        //finds a list containing the schedule of a student for a specific semester
        ArrayList<ScheduleEntry> entries = ScheduleQueries.getScheduleByStudent(currentSemester, studentID);
        DefaultTableModel displaySchedulesTableModel = (DefaultTableModel) displaySchedulesTable.getModel();
        displaySchedulesTableModel.setNumRows(0);
        //pulls data from entries array list and puts it into table
        Object[] rowData = new Object[3];
        for (ScheduleEntry e: entries)
        {
            rowData[0] = e.getCourseCode();
            rowData[1] = e.getStatus().toUpperCase();
            displaySchedulesTableModel.addRow(rowData);
        }
    }//GEN-LAST:event_displaySchedulesButtonActionPerformed

    private void clearDatabaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearDatabaseButtonActionPerformed
        //clears database and rebuilds comboboxes
        MultiTableQueries.clearDatabase();
        rebuildSemesterComboBoxes();
        rebuildCourseComboBoxes();
        rebuildStudentComboBoxes();
    }//GEN-LAST:event_clearDatabaseButtonActionPerformed

    private void dropStudentSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropStudentSubmitButtonActionPerformed
        //clears the text area before new text is added to it
        dropStudentTextArea.setText("");

        //reads the combobox and gets the students name and ID in an array
        String[] nameArray = dropStudentComboBox.getSelectedItem().toString().split(" ");
        String studentID = nameArray[2];
        String studentName = nameArray[0] + " " + nameArray[1];

        //drops student from the student database
        StudentQueries.dropStudent(studentID);
        //rebuilds student combo boxes, and updates text panel
        rebuildStudentComboBoxes();
        dropStudentTextArea.append(studentName + " has been dropped from the list of students.\n");

        //Loops through all semesters
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        for (int semesterIndex = 0; semesterIndex < semesters.size(); semesterIndex++)
        {
            String semesterInLoop = semesters.get(semesterIndex);
            
            //gets all of the student's schedule entries for the current semester
            ArrayList<ScheduleEntry> studentSchedule = ScheduleQueries.getScheduleByStudent(semesterInLoop, studentID);
            if (studentSchedule.size() > 0)
            {
                dropStudentTextArea.append("For Semester: " + semesterInLoop + "\n");
            }
            

            //loops through the schedule entries in list
            for (int scheduleIndex = 0; scheduleIndex < studentSchedule.size(); scheduleIndex++)
            {

                //puts the current schedule entry and course code into variables
                ScheduleEntry currentScheduleEntry = studentSchedule.get(scheduleIndex);
                String currentCourseCode = currentScheduleEntry.getCourseCode();
                //drops the student from the current semester and course
                ScheduleQueries.dropStudentScheduleByCourse(semesterInLoop, studentID, currentCourseCode);

                //calls method to get list of all schedules for waitlisted students for the class
                ArrayList<ScheduleEntry> waitlistedSchedules = ScheduleQueries.getWaitlistedStudentsByClass(semesterInLoop, currentCourseCode);
                //updates the text field depending on if the student is either scheduled or waitlisted
                if (currentScheduleEntry.getStatus().equals("scheduled"))
                {
                    //updates text area
                    dropStudentTextArea.append("\t" + studentName + " has been dropped from " + currentCourseCode + "\n");

                    //if there is a waitlist, update the first waitlist person's schedule using updateScheduleEntry
                    if (waitlistedSchedules.size() > 0)
                    {
                        //updates the first person on the waitlist's schedule to be scheduled for the class
                        ScheduleEntry firstWaitlist = waitlistedSchedules.get(0);
                        ScheduleQueries.updateScheduleEntry(firstWaitlist);

                        //updates text field for the waitlisted student
                        StudentEntry waitlistedStudent = StudentQueries.getStudent(firstWaitlist.getStudentID());
                        dropStudentTextArea.append("\t" + waitlistedStudent.getFirstName() + " " + waitlistedStudent.getLastName() + " has been scheduled into " + currentCourseCode + "\n");
                    }
                }
                else
                {
                    //updates text area
                    dropStudentTextArea.append("\t" + studentName + " has been dropped from the waitlist for " + currentCourseCode + "\n");
                }
            }
        }
    }//GEN-LAST:event_dropStudentSubmitButtonActionPerformed

    private void dropStudentComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropStudentComboBoxActionPerformed
    }//GEN-LAST:event_dropStudentComboBoxActionPerformed

    private void dropClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropClassSubmitButtonActionPerformed
        String currentClass = dropClassComboBox.getSelectedItem().toString();
        //gets a list of all scheduled and waitlisted students for selected class
        ArrayList<StudentEntry> scheduledStudents = MultiTableQueries.getScheduledStudentsByClass(currentSemester, currentClass);
        ArrayList<StudentEntry> waitlistedStudents = MultiTableQueries.getWaitlistedStudentsByClass(currentSemester, currentClass);
        //resets text area
        dropClassTextArea.setText("");
        //updates text area with the students in the scheduled arraylist
        //Note: only updates text if there are scheduled students
        if (scheduledStudents.size() > 0)
        {
            dropClassTextArea.append("Scheduled students dropped from the course:\n");
            for (StudentEntry student : scheduledStudents)
            {
                dropClassTextArea.append("\t" + student.getFirstName() + " " + student.getLastName() + "\n");
            }
        }

        //updates text area with the students in the waitlisted arraylist
        //Note: only updates text if there are waitlisted students
        if (waitlistedStudents.size() > 0)
        {
            dropClassTextArea.append("Waitlisted students dropped from the course:\n");
            for (StudentEntry student : waitlistedStudents)
            {
                dropClassTextArea.append("\t" + student.getFirstName() + " " + student.getLastName() + "\n");
            }
        }

        //call drop schedule by course method to remove all instances of the class in the current semester
        ScheduleQueries.dropScheduleByCourse(currentSemester, currentClass);
        //also calls drop class to remove it from the class database
        ClassQueries.dropClass(currentSemester, currentClass);
        //rebuild combo boxes
        rebuildCourseComboBoxes();
    }//GEN-LAST:event_dropClassSubmitButtonActionPerformed

    private void dropClassComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropClassComboBoxActionPerformed
    }//GEN-LAST:event_dropClassComboBoxActionPerformed

    private void displayClassListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayClassListButtonActionPerformed
        String currentClass = displayClassListComboBox.getSelectedItem().toString();
        //gets a list of all the scheduled and waitlisted students for the selected semester and course
        ArrayList<StudentEntry> scheduledStudents = MultiTableQueries.getScheduledStudentsByClass(currentSemester, currentClass);
        ArrayList<StudentEntry> waitlistedStudents = MultiTableQueries.getWaitlistedStudentsByClass(currentSemester, currentClass);

        //sets table models for the display classes tables
        DefaultTableModel displayClassListScheduledTableModel = (DefaultTableModel) displayClassListScheduledTable.getModel();
        DefaultTableModel displayClassListWaitlistedTableModel = (DefaultTableModel) displayClassListWaitlistedTable.getModel();
        displayClassListScheduledTableModel.setNumRows(0);
        displayClassListWaitlistedTableModel.setNumRows(0);
        //pulls data from arraylists and puts it into tables
        Object[] rowData = new Object[3];
        for (StudentEntry s: scheduledStudents)
        {
            rowData[0] = s.getLastName();
            rowData[1] = s.getFirstName();
            rowData[2] = s.getStudentID();
            displayClassListScheduledTableModel.addRow(rowData);
        }
        for (StudentEntry w: waitlistedStudents)
        {
            rowData[0] = w.getLastName();
            rowData[1] = w.getFirstName();
            rowData[2] = w.getStudentID();
            displayClassListWaitlistedTableModel.addRow(rowData);
        }
    }//GEN-LAST:event_displayClassListButtonActionPerformed

    private void addStudentSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentSubmitButtonActionPerformed
        //pulls data from comboboxes and adds it into a StudentEntry object
        StudentEntry student = new StudentEntry(addStudentIDTextField.getText(), addStudentFirstNameTextField.getText(), addStudentLastNameTextField.getText());
        //adds student object to database and updates label/comboboxes
        StudentQueries.addStudent(student);
        addStudentStatusLabel.setText("Student " + student.getFirstName() + " " + student.getLastName() + " has been added.");
        rebuildStudentComboBoxes();
    }//GEN-LAST:event_addStudentSubmitButtonActionPerformed

    private void addStudentLastNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentLastNameTextFieldActionPerformed
    }//GEN-LAST:event_addStudentLastNameTextFieldActionPerformed

    private void addStudentFirstNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentFirstNameTextFieldActionPerformed
    }//GEN-LAST:event_addStudentFirstNameTextFieldActionPerformed

    private void addStudentIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentIDTextFieldActionPerformed
    }//GEN-LAST:event_addStudentIDTextFieldActionPerformed

    private void addClassCodeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClassCodeComboBoxActionPerformed
    }//GEN-LAST:event_addClassCodeComboBoxActionPerformed

    private void addClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClassSubmitButtonActionPerformed
        //pulls data from comboboxes, adds it to object, adds object to database, and updates text/boxes
        ClassEntry classEntry = new ClassEntry(currentSemester, addClassCodeComboBox.getSelectedItem().toString(), (int)addClassSeatSpinner.getValue());
        ClassQueries.addClass(classEntry);
        addClassStatusLabel.setText("Class " + addClassCodeComboBox.getSelectedItem().toString() + " has been added.");
        rebuildCourseComboBoxes();
    }//GEN-LAST:event_addClassSubmitButtonActionPerformed

    private void addCourseSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseSubmitButtonActionPerformed
        //pulls data from comboboxes, adds it to object, adds object to database, and updates text/boxes
        CourseEntry course = new CourseEntry(addCourseCodeTextField.getText(), addCourseDescriptionTextField.getText());
        CourseQueries.addCourse(course);
        addCourseStatusLabel.setText("Course " + addCourseCodeTextField.getText() + " has been added.");
        rebuildCourseComboBoxes();
    }//GEN-LAST:event_addCourseSubmitButtonActionPerformed

    private void addCourseDescriptionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseDescriptionTextFieldActionPerformed
    }//GEN-LAST:event_addCourseDescriptionTextFieldActionPerformed

    private void addCourseCodeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseCodeTextFieldActionPerformed
    }//GEN-LAST:event_addCourseCodeTextFieldActionPerformed

    private void addSemesterSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSemesterSubmitButtonActionPerformed
        String semester = addSemesterTextfield.getText();
        SemesterQueries.addSemester(semester);
        addSemesterStatusLabel.setText("Semester " + semester + " has been added.");
        rebuildSemesterComboBoxes();
    }//GEN-LAST:event_addSemesterSubmitButtonActionPerformed

    private void studentDropClassesClassComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDropClassesClassComboBoxActionPerformed
    }//GEN-LAST:event_studentDropClassesClassComboBoxActionPerformed

    private void studentDropClassesSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDropClassesSubmitButtonActionPerformed
        //clears text area
        studentDropClassesTextArea.setText("");
        //reads the combobox and gets the students name and ID in an array
        String[] studentNameArray = studentDropClassesStudentComboBox.getSelectedItem().toString().split(" ");
        String studentName = studentNameArray[0] + " " + studentNameArray[1];
        String studentID = studentNameArray[2];
        String droppingCourseCode = studentDropClassesClassComboBox.getSelectedItem().toString();
        //gets a list of all the schedule entries for the selected student and loops through it
        ArrayList<ScheduleEntry> schedule = ScheduleQueries.getScheduleByStudent(currentSemester, studentID);
        for (int scheduleIndex = 0; scheduleIndex < schedule.size(); scheduleIndex++)
        {
            //puts the current schedule and course code into variables
            ScheduleEntry currentScheduleEntry = schedule.get(scheduleIndex);
            String currentCourseCode = currentScheduleEntry.getCourseCode();
            //drops the student from the current semester and course if it has the same code as the combobox
            if (currentCourseCode.equals(droppingCourseCode))
            {
                ScheduleQueries.dropStudentScheduleByCourse(currentSemester, studentID, currentCourseCode);

                //calls method to get list of all schedules for waitlisted students for the class
                ArrayList<ScheduleEntry> waitlistedSchedules = ScheduleQueries.getWaitlistedStudentsByClass(currentSemester, currentCourseCode);
                //updates the text field depending on if the student is either scheduled or waitlisted
                if (currentScheduleEntry.getStatus().equals("scheduled"))
                {
                    //updates text area
                    studentDropClassesTextArea.append(studentName + " has been dropped from " + currentCourseCode + "\n");

                    //if there is a waitlist, update the first waitlist person's schedule using updateScheduleEntry
                    if (waitlistedSchedules.size() > 0)
                    {
                        //updates the first person on the waitlist's schedule to be scheduled for the class
                        ScheduleEntry firstWaitlist = waitlistedSchedules.get(0);
                        ScheduleQueries.updateScheduleEntry(firstWaitlist);

                        //updates text field for the waitlisted student
                        StudentEntry waitlistedStudent = StudentQueries.getStudent(firstWaitlist.getStudentID());
                        studentDropClassesTextArea.append(waitlistedStudent.getFirstName() + " " + waitlistedStudent.getLastName() + " has been scheduled into " + currentCourseCode + "\n");
                    }
                }
                else
                {
                    //updates text area
                    studentDropClassesTextArea.append(studentName + " has been dropped from the waitlist for " + currentCourseCode + "\n");
                }         
            }
        }
    }//GEN-LAST:event_studentDropClassesSubmitButtonActionPerformed

    private void studentDropClassesStudentComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDropClassesStudentComboBoxActionPerformed
    }//GEN-LAST:event_studentDropClassesStudentComboBoxActionPerformed
    
    
    private void checkData() {
        try {
            FileReader reader = new FileReader("xzq789yy.txt");
            BufferedReader breader = new BufferedReader(reader);

            String encodedAuthor = breader.readLine();
            String encodedProject = breader.readLine();
            byte[] decodedAuthor = Base64.getDecoder().decode(encodedAuthor);
            author = new String(decodedAuthor);
            byte[] decodedProject = Base64.getDecoder().decode(encodedProject);
            project = new String(decodedProject);
            reader.close();

        } catch (FileNotFoundException e) {
            //get user info and create file
            author = JOptionPane.showInputDialog("Enter your first and last name.");
            project = "Course Scheduler Fall 2023";

            //write data to the data file.
            try {
                FileWriter writer = new FileWriter("xzq789yy.txt", true);
                BufferedWriter bufferedWriter = new BufferedWriter(writer);

                // encode the output data.
                String encodedAuthor = Base64.getEncoder().encodeToString(author.getBytes());

                bufferedWriter.write(encodedAuthor);
                bufferedWriter.newLine();

                String encodedProject = Base64.getEncoder().encodeToString(project.getBytes());
                bufferedWriter.write(encodedProject);

                bufferedWriter.close();
            } catch (IOException ioe) {
                ioe.printStackTrace();
                System.exit(1);
            }

        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutButton;
    private javax.swing.JComboBox<String> addClassCodeComboBox;
    private javax.swing.JSpinner addClassSeatSpinner;
    private javax.swing.JLabel addClassStatusLabel;
    private javax.swing.JButton addClassSubmitButton;
    private javax.swing.JTextField addCourseCodeTextField;
    private javax.swing.JTextField addCourseDescriptionTextField;
    private javax.swing.JLabel addCourseStatusLabel;
    private javax.swing.JButton addCourseSubmitButton;
    private javax.swing.JLabel addSemesterStatusLabel;
    private javax.swing.JButton addSemesterSubmitButton;
    private javax.swing.JTextField addSemesterTextfield;
    private javax.swing.JTextField addStudentFirstNameTextField;
    private javax.swing.JTextField addStudentIDTextField;
    private javax.swing.JTextField addStudentLastNameTextField;
    private javax.swing.JLabel addStudentStatusLabel;
    private javax.swing.JButton addStudentSubmitButton;
    private javax.swing.JButton changeSemesterButton;
    private javax.swing.JButton clearDatabaseButton;
    private javax.swing.JComboBox<String> currentSemesterComboBox;
    private javax.swing.JLabel currentSemesterLabel;
    private javax.swing.JButton displayClassListButton;
    private javax.swing.JComboBox<String> displayClassListComboBox;
    private javax.swing.JTable displayClassListScheduledTable;
    private javax.swing.JTable displayClassListWaitlistedTable;
    private javax.swing.JButton displayClassesButton;
    private javax.swing.JTable displayClassesTable;
    private javax.swing.JButton displaySchedulesButton;
    private javax.swing.JComboBox<String> displaySchedulesComboBox;
    private javax.swing.JTable displaySchedulesTable;
    private javax.swing.JComboBox<String> dropClassComboBox;
    private javax.swing.JButton dropClassSubmitButton;
    private javax.swing.JTextArea dropClassTextArea;
    private javax.swing.JComboBox<String> dropStudentComboBox;
    private javax.swing.JButton dropStudentSubmitButton;
    private javax.swing.JTextArea dropStudentTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> scheduleClassesClassComboBox;
    private javax.swing.JLabel scheduleClassesStatusLabel;
    private javax.swing.JComboBox<String> scheduleClassesStudentComboBox;
    private javax.swing.JButton scheduleClassesSubmitButton;
    private javax.swing.JComboBox<String> studentDropClassesClassComboBox;
    private javax.swing.JComboBox<String> studentDropClassesStudentComboBox;
    private javax.swing.JButton studentDropClassesSubmitButton;
    private javax.swing.JTextArea studentDropClassesTextArea;
    // End of variables declaration//GEN-END:variables
}
